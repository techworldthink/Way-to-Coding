
Hello world.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000138  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c9c  08000138  08000138  00010138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08000dd4  08000dd4  00010dd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e44  08000e44  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e44  08000e44  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e44  08000e44  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e44  08000e44  00010e44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e48  08000e48  00010e48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e4c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08000eb0  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08000eb0  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000936  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002c5  00000000  00000000  000209c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00020c90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00020da8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002be0  00000000  00000000  00020e88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013d3  00000000  00000000  00023a68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000092fa  00000000  00000000  00024e3b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e135  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a18  00000000  00000000  0002e188  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000138 <__do_global_dtors_aux>:
 8000138:	b510      	push	{r4, lr}
 800013a:	4c05      	ldr	r4, [pc, #20]	; (8000150 <__do_global_dtors_aux+0x18>)
 800013c:	7823      	ldrb	r3, [r4, #0]
 800013e:	b933      	cbnz	r3, 800014e <__do_global_dtors_aux+0x16>
 8000140:	4b04      	ldr	r3, [pc, #16]	; (8000154 <__do_global_dtors_aux+0x1c>)
 8000142:	b113      	cbz	r3, 800014a <__do_global_dtors_aux+0x12>
 8000144:	4804      	ldr	r0, [pc, #16]	; (8000158 <__do_global_dtors_aux+0x20>)
 8000146:	f3af 8000 	nop.w
 800014a:	2301      	movs	r3, #1
 800014c:	7023      	strb	r3, [r4, #0]
 800014e:	bd10      	pop	{r4, pc}
 8000150:	20000064 	.word	0x20000064
 8000154:	00000000 	.word	0x00000000
 8000158:	08000dbc 	.word	0x08000dbc

0800015c <frame_dummy>:
 800015c:	b508      	push	{r3, lr}
 800015e:	4b03      	ldr	r3, [pc, #12]	; (800016c <frame_dummy+0x10>)
 8000160:	b11b      	cbz	r3, 800016a <frame_dummy+0xe>
 8000162:	4903      	ldr	r1, [pc, #12]	; (8000170 <frame_dummy+0x14>)
 8000164:	4803      	ldr	r0, [pc, #12]	; (8000174 <frame_dummy+0x18>)
 8000166:	f3af 8000 	nop.w
 800016a:	bd08      	pop	{r3, pc}
 800016c:	00000000 	.word	0x00000000
 8000170:	20000068 	.word	0x20000068
 8000174:	08000dbc 	.word	0x08000dbc

08000178 <main>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void){
 8000178:	b580      	push	{r7, lr}
 800017a:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf("hello world\n");
 800017c:	4801      	ldr	r0, [pc, #4]	; (8000184 <main+0xc>)
 800017e:	f000 f993 	bl	80004a8 <puts>
	for(;;);
 8000182:	e7fe      	b.n	8000182 <main+0xa>
 8000184:	08000dd4 	.word	0x08000dd4

08000188 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000188:	b480      	push	{r7}
 800018a:	b083      	sub	sp, #12
 800018c:	af00      	add	r7, sp, #0
 800018e:	4603      	mov	r3, r0
 8000190:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000192:	4b0e      	ldr	r3, [pc, #56]	; (80001cc <ITM_SendChar+0x44>)
 8000194:	681b      	ldr	r3, [r3, #0]
 8000196:	4a0d      	ldr	r2, [pc, #52]	; (80001cc <ITM_SendChar+0x44>)
 8000198:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800019c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800019e:	4b0c      	ldr	r3, [pc, #48]	; (80001d0 <ITM_SendChar+0x48>)
 80001a0:	681b      	ldr	r3, [r3, #0]
 80001a2:	4a0b      	ldr	r2, [pc, #44]	; (80001d0 <ITM_SendChar+0x48>)
 80001a4:	f043 0301 	orr.w	r3, r3, #1
 80001a8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80001aa:	bf00      	nop
 80001ac:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80001b0:	681b      	ldr	r3, [r3, #0]
 80001b2:	f003 0301 	and.w	r3, r3, #1
 80001b6:	2b00      	cmp	r3, #0
 80001b8:	d0f8      	beq.n	80001ac <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80001ba:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80001be:	79fb      	ldrb	r3, [r7, #7]
 80001c0:	6013      	str	r3, [r2, #0]
}
 80001c2:	bf00      	nop
 80001c4:	370c      	adds	r7, #12
 80001c6:	46bd      	mov	sp, r7
 80001c8:	bc80      	pop	{r7}
 80001ca:	4770      	bx	lr
 80001cc:	e000edfc 	.word	0xe000edfc
 80001d0:	e0000e00 	.word	0xe0000e00

080001d4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b086      	sub	sp, #24
 80001d8:	af00      	add	r7, sp, #0
 80001da:	60f8      	str	r0, [r7, #12]
 80001dc:	60b9      	str	r1, [r7, #8]
 80001de:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001e0:	2300      	movs	r3, #0
 80001e2:	617b      	str	r3, [r7, #20]
 80001e4:	e00a      	b.n	80001fc <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80001e6:	f3af 8000 	nop.w
 80001ea:	4601      	mov	r1, r0
 80001ec:	68bb      	ldr	r3, [r7, #8]
 80001ee:	1c5a      	adds	r2, r3, #1
 80001f0:	60ba      	str	r2, [r7, #8]
 80001f2:	b2ca      	uxtb	r2, r1
 80001f4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001f6:	697b      	ldr	r3, [r7, #20]
 80001f8:	3301      	adds	r3, #1
 80001fa:	617b      	str	r3, [r7, #20]
 80001fc:	697a      	ldr	r2, [r7, #20]
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	429a      	cmp	r2, r3
 8000202:	dbf0      	blt.n	80001e6 <_read+0x12>
  }

  return len;
 8000204:	687b      	ldr	r3, [r7, #4]
}
 8000206:	4618      	mov	r0, r3
 8000208:	3718      	adds	r7, #24
 800020a:	46bd      	mov	sp, r7
 800020c:	bd80      	pop	{r7, pc}

0800020e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800020e:	b580      	push	{r7, lr}
 8000210:	b086      	sub	sp, #24
 8000212:	af00      	add	r7, sp, #0
 8000214:	60f8      	str	r0, [r7, #12]
 8000216:	60b9      	str	r1, [r7, #8]
 8000218:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800021a:	2300      	movs	r3, #0
 800021c:	617b      	str	r3, [r7, #20]
 800021e:	e009      	b.n	8000234 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000220:	68bb      	ldr	r3, [r7, #8]
 8000222:	1c5a      	adds	r2, r3, #1
 8000224:	60ba      	str	r2, [r7, #8]
 8000226:	781b      	ldrb	r3, [r3, #0]
 8000228:	4618      	mov	r0, r3
 800022a:	f7ff ffad 	bl	8000188 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800022e:	697b      	ldr	r3, [r7, #20]
 8000230:	3301      	adds	r3, #1
 8000232:	617b      	str	r3, [r7, #20]
 8000234:	697a      	ldr	r2, [r7, #20]
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	429a      	cmp	r2, r3
 800023a:	dbf1      	blt.n	8000220 <_write+0x12>
  }
  return len;
 800023c:	687b      	ldr	r3, [r7, #4]
}
 800023e:	4618      	mov	r0, r3
 8000240:	3718      	adds	r7, #24
 8000242:	46bd      	mov	sp, r7
 8000244:	bd80      	pop	{r7, pc}

08000246 <_close>:

int _close(int file)
{
 8000246:	b480      	push	{r7}
 8000248:	b083      	sub	sp, #12
 800024a:	af00      	add	r7, sp, #0
 800024c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800024e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000252:	4618      	mov	r0, r3
 8000254:	370c      	adds	r7, #12
 8000256:	46bd      	mov	sp, r7
 8000258:	bc80      	pop	{r7}
 800025a:	4770      	bx	lr

0800025c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800025c:	b480      	push	{r7}
 800025e:	b083      	sub	sp, #12
 8000260:	af00      	add	r7, sp, #0
 8000262:	6078      	str	r0, [r7, #4]
 8000264:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000266:	683b      	ldr	r3, [r7, #0]
 8000268:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800026c:	605a      	str	r2, [r3, #4]
  return 0;
 800026e:	2300      	movs	r3, #0
}
 8000270:	4618      	mov	r0, r3
 8000272:	370c      	adds	r7, #12
 8000274:	46bd      	mov	sp, r7
 8000276:	bc80      	pop	{r7}
 8000278:	4770      	bx	lr

0800027a <_isatty>:

int _isatty(int file)
{
 800027a:	b480      	push	{r7}
 800027c:	b083      	sub	sp, #12
 800027e:	af00      	add	r7, sp, #0
 8000280:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000282:	2301      	movs	r3, #1
}
 8000284:	4618      	mov	r0, r3
 8000286:	370c      	adds	r7, #12
 8000288:	46bd      	mov	sp, r7
 800028a:	bc80      	pop	{r7}
 800028c:	4770      	bx	lr

0800028e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800028e:	b480      	push	{r7}
 8000290:	b085      	sub	sp, #20
 8000292:	af00      	add	r7, sp, #0
 8000294:	60f8      	str	r0, [r7, #12]
 8000296:	60b9      	str	r1, [r7, #8]
 8000298:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800029a:	2300      	movs	r3, #0
}
 800029c:	4618      	mov	r0, r3
 800029e:	3714      	adds	r7, #20
 80002a0:	46bd      	mov	sp, r7
 80002a2:	bc80      	pop	{r7}
 80002a4:	4770      	bx	lr
	...

080002a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002a8:	b580      	push	{r7, lr}
 80002aa:	b086      	sub	sp, #24
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002b0:	4a14      	ldr	r2, [pc, #80]	; (8000304 <_sbrk+0x5c>)
 80002b2:	4b15      	ldr	r3, [pc, #84]	; (8000308 <_sbrk+0x60>)
 80002b4:	1ad3      	subs	r3, r2, r3
 80002b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002b8:	697b      	ldr	r3, [r7, #20]
 80002ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002bc:	4b13      	ldr	r3, [pc, #76]	; (800030c <_sbrk+0x64>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	2b00      	cmp	r3, #0
 80002c2:	d102      	bne.n	80002ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002c4:	4b11      	ldr	r3, [pc, #68]	; (800030c <_sbrk+0x64>)
 80002c6:	4a12      	ldr	r2, [pc, #72]	; (8000310 <_sbrk+0x68>)
 80002c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002ca:	4b10      	ldr	r3, [pc, #64]	; (800030c <_sbrk+0x64>)
 80002cc:	681a      	ldr	r2, [r3, #0]
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4413      	add	r3, r2
 80002d2:	693a      	ldr	r2, [r7, #16]
 80002d4:	429a      	cmp	r2, r3
 80002d6:	d207      	bcs.n	80002e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002d8:	f000 f846 	bl	8000368 <__errno>
 80002dc:	4603      	mov	r3, r0
 80002de:	220c      	movs	r2, #12
 80002e0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80002e2:	f04f 33ff 	mov.w	r3, #4294967295
 80002e6:	e009      	b.n	80002fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80002e8:	4b08      	ldr	r3, [pc, #32]	; (800030c <_sbrk+0x64>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80002ee:	4b07      	ldr	r3, [pc, #28]	; (800030c <_sbrk+0x64>)
 80002f0:	681a      	ldr	r2, [r3, #0]
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4413      	add	r3, r2
 80002f6:	4a05      	ldr	r2, [pc, #20]	; (800030c <_sbrk+0x64>)
 80002f8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002fa:	68fb      	ldr	r3, [r7, #12]
}
 80002fc:	4618      	mov	r0, r3
 80002fe:	3718      	adds	r7, #24
 8000300:	46bd      	mov	sp, r7
 8000302:	bd80      	pop	{r7, pc}
 8000304:	20010000 	.word	0x20010000
 8000308:	00000400 	.word	0x00000400
 800030c:	20000080 	.word	0x20000080
 8000310:	20000098 	.word	0x20000098

08000314 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000314:	480d      	ldr	r0, [pc, #52]	; (800034c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000316:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000318:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800031c:	480c      	ldr	r0, [pc, #48]	; (8000350 <LoopForever+0x6>)
  ldr r1, =_edata
 800031e:	490d      	ldr	r1, [pc, #52]	; (8000354 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000320:	4a0d      	ldr	r2, [pc, #52]	; (8000358 <LoopForever+0xe>)
  movs r3, #0
 8000322:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000324:	e002      	b.n	800032c <LoopCopyDataInit>

08000326 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000326:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000328:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800032a:	3304      	adds	r3, #4

0800032c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800032c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800032e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000330:	d3f9      	bcc.n	8000326 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000332:	4a0a      	ldr	r2, [pc, #40]	; (800035c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000334:	4c0a      	ldr	r4, [pc, #40]	; (8000360 <LoopForever+0x16>)
  movs r3, #0
 8000336:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000338:	e001      	b.n	800033e <LoopFillZerobss>

0800033a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800033a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800033c:	3204      	adds	r2, #4

0800033e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800033e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000340:	d3fb      	bcc.n	800033a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000342:	f000 f817 	bl	8000374 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000346:	f7ff ff17 	bl	8000178 <main>

0800034a <LoopForever>:

LoopForever:
  b LoopForever
 800034a:	e7fe      	b.n	800034a <LoopForever>
  ldr   r0, =_estack
 800034c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000350:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000354:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000358:	08000e4c 	.word	0x08000e4c
  ldr r2, =_sbss
 800035c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000360:	20000094 	.word	0x20000094

08000364 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000364:	e7fe      	b.n	8000364 <ADC_IRQHandler>
	...

08000368 <__errno>:
 8000368:	4b01      	ldr	r3, [pc, #4]	; (8000370 <__errno+0x8>)
 800036a:	6818      	ldr	r0, [r3, #0]
 800036c:	4770      	bx	lr
 800036e:	bf00      	nop
 8000370:	20000000 	.word	0x20000000

08000374 <__libc_init_array>:
 8000374:	b570      	push	{r4, r5, r6, lr}
 8000376:	4d0d      	ldr	r5, [pc, #52]	; (80003ac <__libc_init_array+0x38>)
 8000378:	4c0d      	ldr	r4, [pc, #52]	; (80003b0 <__libc_init_array+0x3c>)
 800037a:	1b64      	subs	r4, r4, r5
 800037c:	10a4      	asrs	r4, r4, #2
 800037e:	2600      	movs	r6, #0
 8000380:	42a6      	cmp	r6, r4
 8000382:	d109      	bne.n	8000398 <__libc_init_array+0x24>
 8000384:	4d0b      	ldr	r5, [pc, #44]	; (80003b4 <__libc_init_array+0x40>)
 8000386:	4c0c      	ldr	r4, [pc, #48]	; (80003b8 <__libc_init_array+0x44>)
 8000388:	f000 fd18 	bl	8000dbc <_init>
 800038c:	1b64      	subs	r4, r4, r5
 800038e:	10a4      	asrs	r4, r4, #2
 8000390:	2600      	movs	r6, #0
 8000392:	42a6      	cmp	r6, r4
 8000394:	d105      	bne.n	80003a2 <__libc_init_array+0x2e>
 8000396:	bd70      	pop	{r4, r5, r6, pc}
 8000398:	f855 3b04 	ldr.w	r3, [r5], #4
 800039c:	4798      	blx	r3
 800039e:	3601      	adds	r6, #1
 80003a0:	e7ee      	b.n	8000380 <__libc_init_array+0xc>
 80003a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80003a6:	4798      	blx	r3
 80003a8:	3601      	adds	r6, #1
 80003aa:	e7f2      	b.n	8000392 <__libc_init_array+0x1e>
 80003ac:	08000e44 	.word	0x08000e44
 80003b0:	08000e44 	.word	0x08000e44
 80003b4:	08000e44 	.word	0x08000e44
 80003b8:	08000e48 	.word	0x08000e48

080003bc <memset>:
 80003bc:	4402      	add	r2, r0
 80003be:	4603      	mov	r3, r0
 80003c0:	4293      	cmp	r3, r2
 80003c2:	d100      	bne.n	80003c6 <memset+0xa>
 80003c4:	4770      	bx	lr
 80003c6:	f803 1b01 	strb.w	r1, [r3], #1
 80003ca:	e7f9      	b.n	80003c0 <memset+0x4>

080003cc <_puts_r>:
 80003cc:	b570      	push	{r4, r5, r6, lr}
 80003ce:	460e      	mov	r6, r1
 80003d0:	4605      	mov	r5, r0
 80003d2:	b118      	cbz	r0, 80003dc <_puts_r+0x10>
 80003d4:	6983      	ldr	r3, [r0, #24]
 80003d6:	b90b      	cbnz	r3, 80003dc <_puts_r+0x10>
 80003d8:	f000 fa44 	bl	8000864 <__sinit>
 80003dc:	69ab      	ldr	r3, [r5, #24]
 80003de:	68ac      	ldr	r4, [r5, #8]
 80003e0:	b913      	cbnz	r3, 80003e8 <_puts_r+0x1c>
 80003e2:	4628      	mov	r0, r5
 80003e4:	f000 fa3e 	bl	8000864 <__sinit>
 80003e8:	4b2c      	ldr	r3, [pc, #176]	; (800049c <_puts_r+0xd0>)
 80003ea:	429c      	cmp	r4, r3
 80003ec:	d120      	bne.n	8000430 <_puts_r+0x64>
 80003ee:	686c      	ldr	r4, [r5, #4]
 80003f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80003f2:	07db      	lsls	r3, r3, #31
 80003f4:	d405      	bmi.n	8000402 <_puts_r+0x36>
 80003f6:	89a3      	ldrh	r3, [r4, #12]
 80003f8:	0598      	lsls	r0, r3, #22
 80003fa:	d402      	bmi.n	8000402 <_puts_r+0x36>
 80003fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80003fe:	f000 facf 	bl	80009a0 <__retarget_lock_acquire_recursive>
 8000402:	89a3      	ldrh	r3, [r4, #12]
 8000404:	0719      	lsls	r1, r3, #28
 8000406:	d51d      	bpl.n	8000444 <_puts_r+0x78>
 8000408:	6923      	ldr	r3, [r4, #16]
 800040a:	b1db      	cbz	r3, 8000444 <_puts_r+0x78>
 800040c:	3e01      	subs	r6, #1
 800040e:	68a3      	ldr	r3, [r4, #8]
 8000410:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000414:	3b01      	subs	r3, #1
 8000416:	60a3      	str	r3, [r4, #8]
 8000418:	bb39      	cbnz	r1, 800046a <_puts_r+0x9e>
 800041a:	2b00      	cmp	r3, #0
 800041c:	da38      	bge.n	8000490 <_puts_r+0xc4>
 800041e:	4622      	mov	r2, r4
 8000420:	210a      	movs	r1, #10
 8000422:	4628      	mov	r0, r5
 8000424:	f000 f848 	bl	80004b8 <__swbuf_r>
 8000428:	3001      	adds	r0, #1
 800042a:	d011      	beq.n	8000450 <_puts_r+0x84>
 800042c:	250a      	movs	r5, #10
 800042e:	e011      	b.n	8000454 <_puts_r+0x88>
 8000430:	4b1b      	ldr	r3, [pc, #108]	; (80004a0 <_puts_r+0xd4>)
 8000432:	429c      	cmp	r4, r3
 8000434:	d101      	bne.n	800043a <_puts_r+0x6e>
 8000436:	68ac      	ldr	r4, [r5, #8]
 8000438:	e7da      	b.n	80003f0 <_puts_r+0x24>
 800043a:	4b1a      	ldr	r3, [pc, #104]	; (80004a4 <_puts_r+0xd8>)
 800043c:	429c      	cmp	r4, r3
 800043e:	bf08      	it	eq
 8000440:	68ec      	ldreq	r4, [r5, #12]
 8000442:	e7d5      	b.n	80003f0 <_puts_r+0x24>
 8000444:	4621      	mov	r1, r4
 8000446:	4628      	mov	r0, r5
 8000448:	f000 f888 	bl	800055c <__swsetup_r>
 800044c:	2800      	cmp	r0, #0
 800044e:	d0dd      	beq.n	800040c <_puts_r+0x40>
 8000450:	f04f 35ff 	mov.w	r5, #4294967295
 8000454:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000456:	07da      	lsls	r2, r3, #31
 8000458:	d405      	bmi.n	8000466 <_puts_r+0x9a>
 800045a:	89a3      	ldrh	r3, [r4, #12]
 800045c:	059b      	lsls	r3, r3, #22
 800045e:	d402      	bmi.n	8000466 <_puts_r+0x9a>
 8000460:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000462:	f000 fa9e 	bl	80009a2 <__retarget_lock_release_recursive>
 8000466:	4628      	mov	r0, r5
 8000468:	bd70      	pop	{r4, r5, r6, pc}
 800046a:	2b00      	cmp	r3, #0
 800046c:	da04      	bge.n	8000478 <_puts_r+0xac>
 800046e:	69a2      	ldr	r2, [r4, #24]
 8000470:	429a      	cmp	r2, r3
 8000472:	dc06      	bgt.n	8000482 <_puts_r+0xb6>
 8000474:	290a      	cmp	r1, #10
 8000476:	d004      	beq.n	8000482 <_puts_r+0xb6>
 8000478:	6823      	ldr	r3, [r4, #0]
 800047a:	1c5a      	adds	r2, r3, #1
 800047c:	6022      	str	r2, [r4, #0]
 800047e:	7019      	strb	r1, [r3, #0]
 8000480:	e7c5      	b.n	800040e <_puts_r+0x42>
 8000482:	4622      	mov	r2, r4
 8000484:	4628      	mov	r0, r5
 8000486:	f000 f817 	bl	80004b8 <__swbuf_r>
 800048a:	3001      	adds	r0, #1
 800048c:	d1bf      	bne.n	800040e <_puts_r+0x42>
 800048e:	e7df      	b.n	8000450 <_puts_r+0x84>
 8000490:	6823      	ldr	r3, [r4, #0]
 8000492:	250a      	movs	r5, #10
 8000494:	1c5a      	adds	r2, r3, #1
 8000496:	6022      	str	r2, [r4, #0]
 8000498:	701d      	strb	r5, [r3, #0]
 800049a:	e7db      	b.n	8000454 <_puts_r+0x88>
 800049c:	08000e04 	.word	0x08000e04
 80004a0:	08000e24 	.word	0x08000e24
 80004a4:	08000de4 	.word	0x08000de4

080004a8 <puts>:
 80004a8:	4b02      	ldr	r3, [pc, #8]	; (80004b4 <puts+0xc>)
 80004aa:	4601      	mov	r1, r0
 80004ac:	6818      	ldr	r0, [r3, #0]
 80004ae:	f7ff bf8d 	b.w	80003cc <_puts_r>
 80004b2:	bf00      	nop
 80004b4:	20000000 	.word	0x20000000

080004b8 <__swbuf_r>:
 80004b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ba:	460e      	mov	r6, r1
 80004bc:	4614      	mov	r4, r2
 80004be:	4605      	mov	r5, r0
 80004c0:	b118      	cbz	r0, 80004ca <__swbuf_r+0x12>
 80004c2:	6983      	ldr	r3, [r0, #24]
 80004c4:	b90b      	cbnz	r3, 80004ca <__swbuf_r+0x12>
 80004c6:	f000 f9cd 	bl	8000864 <__sinit>
 80004ca:	4b21      	ldr	r3, [pc, #132]	; (8000550 <__swbuf_r+0x98>)
 80004cc:	429c      	cmp	r4, r3
 80004ce:	d12b      	bne.n	8000528 <__swbuf_r+0x70>
 80004d0:	686c      	ldr	r4, [r5, #4]
 80004d2:	69a3      	ldr	r3, [r4, #24]
 80004d4:	60a3      	str	r3, [r4, #8]
 80004d6:	89a3      	ldrh	r3, [r4, #12]
 80004d8:	071a      	lsls	r2, r3, #28
 80004da:	d52f      	bpl.n	800053c <__swbuf_r+0x84>
 80004dc:	6923      	ldr	r3, [r4, #16]
 80004de:	b36b      	cbz	r3, 800053c <__swbuf_r+0x84>
 80004e0:	6923      	ldr	r3, [r4, #16]
 80004e2:	6820      	ldr	r0, [r4, #0]
 80004e4:	1ac0      	subs	r0, r0, r3
 80004e6:	6963      	ldr	r3, [r4, #20]
 80004e8:	b2f6      	uxtb	r6, r6
 80004ea:	4283      	cmp	r3, r0
 80004ec:	4637      	mov	r7, r6
 80004ee:	dc04      	bgt.n	80004fa <__swbuf_r+0x42>
 80004f0:	4621      	mov	r1, r4
 80004f2:	4628      	mov	r0, r5
 80004f4:	f000 f922 	bl	800073c <_fflush_r>
 80004f8:	bb30      	cbnz	r0, 8000548 <__swbuf_r+0x90>
 80004fa:	68a3      	ldr	r3, [r4, #8]
 80004fc:	3b01      	subs	r3, #1
 80004fe:	60a3      	str	r3, [r4, #8]
 8000500:	6823      	ldr	r3, [r4, #0]
 8000502:	1c5a      	adds	r2, r3, #1
 8000504:	6022      	str	r2, [r4, #0]
 8000506:	701e      	strb	r6, [r3, #0]
 8000508:	6963      	ldr	r3, [r4, #20]
 800050a:	3001      	adds	r0, #1
 800050c:	4283      	cmp	r3, r0
 800050e:	d004      	beq.n	800051a <__swbuf_r+0x62>
 8000510:	89a3      	ldrh	r3, [r4, #12]
 8000512:	07db      	lsls	r3, r3, #31
 8000514:	d506      	bpl.n	8000524 <__swbuf_r+0x6c>
 8000516:	2e0a      	cmp	r6, #10
 8000518:	d104      	bne.n	8000524 <__swbuf_r+0x6c>
 800051a:	4621      	mov	r1, r4
 800051c:	4628      	mov	r0, r5
 800051e:	f000 f90d 	bl	800073c <_fflush_r>
 8000522:	b988      	cbnz	r0, 8000548 <__swbuf_r+0x90>
 8000524:	4638      	mov	r0, r7
 8000526:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000528:	4b0a      	ldr	r3, [pc, #40]	; (8000554 <__swbuf_r+0x9c>)
 800052a:	429c      	cmp	r4, r3
 800052c:	d101      	bne.n	8000532 <__swbuf_r+0x7a>
 800052e:	68ac      	ldr	r4, [r5, #8]
 8000530:	e7cf      	b.n	80004d2 <__swbuf_r+0x1a>
 8000532:	4b09      	ldr	r3, [pc, #36]	; (8000558 <__swbuf_r+0xa0>)
 8000534:	429c      	cmp	r4, r3
 8000536:	bf08      	it	eq
 8000538:	68ec      	ldreq	r4, [r5, #12]
 800053a:	e7ca      	b.n	80004d2 <__swbuf_r+0x1a>
 800053c:	4621      	mov	r1, r4
 800053e:	4628      	mov	r0, r5
 8000540:	f000 f80c 	bl	800055c <__swsetup_r>
 8000544:	2800      	cmp	r0, #0
 8000546:	d0cb      	beq.n	80004e0 <__swbuf_r+0x28>
 8000548:	f04f 37ff 	mov.w	r7, #4294967295
 800054c:	e7ea      	b.n	8000524 <__swbuf_r+0x6c>
 800054e:	bf00      	nop
 8000550:	08000e04 	.word	0x08000e04
 8000554:	08000e24 	.word	0x08000e24
 8000558:	08000de4 	.word	0x08000de4

0800055c <__swsetup_r>:
 800055c:	4b32      	ldr	r3, [pc, #200]	; (8000628 <__swsetup_r+0xcc>)
 800055e:	b570      	push	{r4, r5, r6, lr}
 8000560:	681d      	ldr	r5, [r3, #0]
 8000562:	4606      	mov	r6, r0
 8000564:	460c      	mov	r4, r1
 8000566:	b125      	cbz	r5, 8000572 <__swsetup_r+0x16>
 8000568:	69ab      	ldr	r3, [r5, #24]
 800056a:	b913      	cbnz	r3, 8000572 <__swsetup_r+0x16>
 800056c:	4628      	mov	r0, r5
 800056e:	f000 f979 	bl	8000864 <__sinit>
 8000572:	4b2e      	ldr	r3, [pc, #184]	; (800062c <__swsetup_r+0xd0>)
 8000574:	429c      	cmp	r4, r3
 8000576:	d10f      	bne.n	8000598 <__swsetup_r+0x3c>
 8000578:	686c      	ldr	r4, [r5, #4]
 800057a:	89a3      	ldrh	r3, [r4, #12]
 800057c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000580:	0719      	lsls	r1, r3, #28
 8000582:	d42c      	bmi.n	80005de <__swsetup_r+0x82>
 8000584:	06dd      	lsls	r5, r3, #27
 8000586:	d411      	bmi.n	80005ac <__swsetup_r+0x50>
 8000588:	2309      	movs	r3, #9
 800058a:	6033      	str	r3, [r6, #0]
 800058c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000590:	81a3      	strh	r3, [r4, #12]
 8000592:	f04f 30ff 	mov.w	r0, #4294967295
 8000596:	e03e      	b.n	8000616 <__swsetup_r+0xba>
 8000598:	4b25      	ldr	r3, [pc, #148]	; (8000630 <__swsetup_r+0xd4>)
 800059a:	429c      	cmp	r4, r3
 800059c:	d101      	bne.n	80005a2 <__swsetup_r+0x46>
 800059e:	68ac      	ldr	r4, [r5, #8]
 80005a0:	e7eb      	b.n	800057a <__swsetup_r+0x1e>
 80005a2:	4b24      	ldr	r3, [pc, #144]	; (8000634 <__swsetup_r+0xd8>)
 80005a4:	429c      	cmp	r4, r3
 80005a6:	bf08      	it	eq
 80005a8:	68ec      	ldreq	r4, [r5, #12]
 80005aa:	e7e6      	b.n	800057a <__swsetup_r+0x1e>
 80005ac:	0758      	lsls	r0, r3, #29
 80005ae:	d512      	bpl.n	80005d6 <__swsetup_r+0x7a>
 80005b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005b2:	b141      	cbz	r1, 80005c6 <__swsetup_r+0x6a>
 80005b4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80005b8:	4299      	cmp	r1, r3
 80005ba:	d002      	beq.n	80005c2 <__swsetup_r+0x66>
 80005bc:	4630      	mov	r0, r6
 80005be:	f000 fa57 	bl	8000a70 <_free_r>
 80005c2:	2300      	movs	r3, #0
 80005c4:	6363      	str	r3, [r4, #52]	; 0x34
 80005c6:	89a3      	ldrh	r3, [r4, #12]
 80005c8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80005cc:	81a3      	strh	r3, [r4, #12]
 80005ce:	2300      	movs	r3, #0
 80005d0:	6063      	str	r3, [r4, #4]
 80005d2:	6923      	ldr	r3, [r4, #16]
 80005d4:	6023      	str	r3, [r4, #0]
 80005d6:	89a3      	ldrh	r3, [r4, #12]
 80005d8:	f043 0308 	orr.w	r3, r3, #8
 80005dc:	81a3      	strh	r3, [r4, #12]
 80005de:	6923      	ldr	r3, [r4, #16]
 80005e0:	b94b      	cbnz	r3, 80005f6 <__swsetup_r+0x9a>
 80005e2:	89a3      	ldrh	r3, [r4, #12]
 80005e4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80005e8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80005ec:	d003      	beq.n	80005f6 <__swsetup_r+0x9a>
 80005ee:	4621      	mov	r1, r4
 80005f0:	4630      	mov	r0, r6
 80005f2:	f000 f9fd 	bl	80009f0 <__smakebuf_r>
 80005f6:	89a0      	ldrh	r0, [r4, #12]
 80005f8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80005fc:	f010 0301 	ands.w	r3, r0, #1
 8000600:	d00a      	beq.n	8000618 <__swsetup_r+0xbc>
 8000602:	2300      	movs	r3, #0
 8000604:	60a3      	str	r3, [r4, #8]
 8000606:	6963      	ldr	r3, [r4, #20]
 8000608:	425b      	negs	r3, r3
 800060a:	61a3      	str	r3, [r4, #24]
 800060c:	6923      	ldr	r3, [r4, #16]
 800060e:	b943      	cbnz	r3, 8000622 <__swsetup_r+0xc6>
 8000610:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000614:	d1ba      	bne.n	800058c <__swsetup_r+0x30>
 8000616:	bd70      	pop	{r4, r5, r6, pc}
 8000618:	0781      	lsls	r1, r0, #30
 800061a:	bf58      	it	pl
 800061c:	6963      	ldrpl	r3, [r4, #20]
 800061e:	60a3      	str	r3, [r4, #8]
 8000620:	e7f4      	b.n	800060c <__swsetup_r+0xb0>
 8000622:	2000      	movs	r0, #0
 8000624:	e7f7      	b.n	8000616 <__swsetup_r+0xba>
 8000626:	bf00      	nop
 8000628:	20000000 	.word	0x20000000
 800062c:	08000e04 	.word	0x08000e04
 8000630:	08000e24 	.word	0x08000e24
 8000634:	08000de4 	.word	0x08000de4

08000638 <__sflush_r>:
 8000638:	898a      	ldrh	r2, [r1, #12]
 800063a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800063c:	4605      	mov	r5, r0
 800063e:	0710      	lsls	r0, r2, #28
 8000640:	460c      	mov	r4, r1
 8000642:	d457      	bmi.n	80006f4 <__sflush_r+0xbc>
 8000644:	684b      	ldr	r3, [r1, #4]
 8000646:	2b00      	cmp	r3, #0
 8000648:	dc04      	bgt.n	8000654 <__sflush_r+0x1c>
 800064a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800064c:	2b00      	cmp	r3, #0
 800064e:	dc01      	bgt.n	8000654 <__sflush_r+0x1c>
 8000650:	2000      	movs	r0, #0
 8000652:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000654:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000656:	2e00      	cmp	r6, #0
 8000658:	d0fa      	beq.n	8000650 <__sflush_r+0x18>
 800065a:	2300      	movs	r3, #0
 800065c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000660:	682f      	ldr	r7, [r5, #0]
 8000662:	602b      	str	r3, [r5, #0]
 8000664:	d032      	beq.n	80006cc <__sflush_r+0x94>
 8000666:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000668:	89a3      	ldrh	r3, [r4, #12]
 800066a:	075a      	lsls	r2, r3, #29
 800066c:	d505      	bpl.n	800067a <__sflush_r+0x42>
 800066e:	6863      	ldr	r3, [r4, #4]
 8000670:	1ac0      	subs	r0, r0, r3
 8000672:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000674:	b10b      	cbz	r3, 800067a <__sflush_r+0x42>
 8000676:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000678:	1ac0      	subs	r0, r0, r3
 800067a:	2300      	movs	r3, #0
 800067c:	4602      	mov	r2, r0
 800067e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000680:	6a21      	ldr	r1, [r4, #32]
 8000682:	4628      	mov	r0, r5
 8000684:	47b0      	blx	r6
 8000686:	1c43      	adds	r3, r0, #1
 8000688:	89a3      	ldrh	r3, [r4, #12]
 800068a:	d106      	bne.n	800069a <__sflush_r+0x62>
 800068c:	6829      	ldr	r1, [r5, #0]
 800068e:	291d      	cmp	r1, #29
 8000690:	d82c      	bhi.n	80006ec <__sflush_r+0xb4>
 8000692:	4a29      	ldr	r2, [pc, #164]	; (8000738 <__sflush_r+0x100>)
 8000694:	40ca      	lsrs	r2, r1
 8000696:	07d6      	lsls	r6, r2, #31
 8000698:	d528      	bpl.n	80006ec <__sflush_r+0xb4>
 800069a:	2200      	movs	r2, #0
 800069c:	6062      	str	r2, [r4, #4]
 800069e:	04d9      	lsls	r1, r3, #19
 80006a0:	6922      	ldr	r2, [r4, #16]
 80006a2:	6022      	str	r2, [r4, #0]
 80006a4:	d504      	bpl.n	80006b0 <__sflush_r+0x78>
 80006a6:	1c42      	adds	r2, r0, #1
 80006a8:	d101      	bne.n	80006ae <__sflush_r+0x76>
 80006aa:	682b      	ldr	r3, [r5, #0]
 80006ac:	b903      	cbnz	r3, 80006b0 <__sflush_r+0x78>
 80006ae:	6560      	str	r0, [r4, #84]	; 0x54
 80006b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006b2:	602f      	str	r7, [r5, #0]
 80006b4:	2900      	cmp	r1, #0
 80006b6:	d0cb      	beq.n	8000650 <__sflush_r+0x18>
 80006b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006bc:	4299      	cmp	r1, r3
 80006be:	d002      	beq.n	80006c6 <__sflush_r+0x8e>
 80006c0:	4628      	mov	r0, r5
 80006c2:	f000 f9d5 	bl	8000a70 <_free_r>
 80006c6:	2000      	movs	r0, #0
 80006c8:	6360      	str	r0, [r4, #52]	; 0x34
 80006ca:	e7c2      	b.n	8000652 <__sflush_r+0x1a>
 80006cc:	6a21      	ldr	r1, [r4, #32]
 80006ce:	2301      	movs	r3, #1
 80006d0:	4628      	mov	r0, r5
 80006d2:	47b0      	blx	r6
 80006d4:	1c41      	adds	r1, r0, #1
 80006d6:	d1c7      	bne.n	8000668 <__sflush_r+0x30>
 80006d8:	682b      	ldr	r3, [r5, #0]
 80006da:	2b00      	cmp	r3, #0
 80006dc:	d0c4      	beq.n	8000668 <__sflush_r+0x30>
 80006de:	2b1d      	cmp	r3, #29
 80006e0:	d001      	beq.n	80006e6 <__sflush_r+0xae>
 80006e2:	2b16      	cmp	r3, #22
 80006e4:	d101      	bne.n	80006ea <__sflush_r+0xb2>
 80006e6:	602f      	str	r7, [r5, #0]
 80006e8:	e7b2      	b.n	8000650 <__sflush_r+0x18>
 80006ea:	89a3      	ldrh	r3, [r4, #12]
 80006ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006f0:	81a3      	strh	r3, [r4, #12]
 80006f2:	e7ae      	b.n	8000652 <__sflush_r+0x1a>
 80006f4:	690f      	ldr	r7, [r1, #16]
 80006f6:	2f00      	cmp	r7, #0
 80006f8:	d0aa      	beq.n	8000650 <__sflush_r+0x18>
 80006fa:	0793      	lsls	r3, r2, #30
 80006fc:	680e      	ldr	r6, [r1, #0]
 80006fe:	bf08      	it	eq
 8000700:	694b      	ldreq	r3, [r1, #20]
 8000702:	600f      	str	r7, [r1, #0]
 8000704:	bf18      	it	ne
 8000706:	2300      	movne	r3, #0
 8000708:	1bf6      	subs	r6, r6, r7
 800070a:	608b      	str	r3, [r1, #8]
 800070c:	2e00      	cmp	r6, #0
 800070e:	dd9f      	ble.n	8000650 <__sflush_r+0x18>
 8000710:	6a21      	ldr	r1, [r4, #32]
 8000712:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000716:	4633      	mov	r3, r6
 8000718:	463a      	mov	r2, r7
 800071a:	4628      	mov	r0, r5
 800071c:	47e0      	blx	ip
 800071e:	2800      	cmp	r0, #0
 8000720:	dc06      	bgt.n	8000730 <__sflush_r+0xf8>
 8000722:	89a3      	ldrh	r3, [r4, #12]
 8000724:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000728:	81a3      	strh	r3, [r4, #12]
 800072a:	f04f 30ff 	mov.w	r0, #4294967295
 800072e:	e790      	b.n	8000652 <__sflush_r+0x1a>
 8000730:	4407      	add	r7, r0
 8000732:	1a36      	subs	r6, r6, r0
 8000734:	e7ea      	b.n	800070c <__sflush_r+0xd4>
 8000736:	bf00      	nop
 8000738:	20400001 	.word	0x20400001

0800073c <_fflush_r>:
 800073c:	b538      	push	{r3, r4, r5, lr}
 800073e:	690b      	ldr	r3, [r1, #16]
 8000740:	4605      	mov	r5, r0
 8000742:	460c      	mov	r4, r1
 8000744:	b913      	cbnz	r3, 800074c <_fflush_r+0x10>
 8000746:	2500      	movs	r5, #0
 8000748:	4628      	mov	r0, r5
 800074a:	bd38      	pop	{r3, r4, r5, pc}
 800074c:	b118      	cbz	r0, 8000756 <_fflush_r+0x1a>
 800074e:	6983      	ldr	r3, [r0, #24]
 8000750:	b90b      	cbnz	r3, 8000756 <_fflush_r+0x1a>
 8000752:	f000 f887 	bl	8000864 <__sinit>
 8000756:	4b14      	ldr	r3, [pc, #80]	; (80007a8 <_fflush_r+0x6c>)
 8000758:	429c      	cmp	r4, r3
 800075a:	d11b      	bne.n	8000794 <_fflush_r+0x58>
 800075c:	686c      	ldr	r4, [r5, #4]
 800075e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000762:	2b00      	cmp	r3, #0
 8000764:	d0ef      	beq.n	8000746 <_fflush_r+0xa>
 8000766:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000768:	07d0      	lsls	r0, r2, #31
 800076a:	d404      	bmi.n	8000776 <_fflush_r+0x3a>
 800076c:	0599      	lsls	r1, r3, #22
 800076e:	d402      	bmi.n	8000776 <_fflush_r+0x3a>
 8000770:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000772:	f000 f915 	bl	80009a0 <__retarget_lock_acquire_recursive>
 8000776:	4628      	mov	r0, r5
 8000778:	4621      	mov	r1, r4
 800077a:	f7ff ff5d 	bl	8000638 <__sflush_r>
 800077e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000780:	07da      	lsls	r2, r3, #31
 8000782:	4605      	mov	r5, r0
 8000784:	d4e0      	bmi.n	8000748 <_fflush_r+0xc>
 8000786:	89a3      	ldrh	r3, [r4, #12]
 8000788:	059b      	lsls	r3, r3, #22
 800078a:	d4dd      	bmi.n	8000748 <_fflush_r+0xc>
 800078c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800078e:	f000 f908 	bl	80009a2 <__retarget_lock_release_recursive>
 8000792:	e7d9      	b.n	8000748 <_fflush_r+0xc>
 8000794:	4b05      	ldr	r3, [pc, #20]	; (80007ac <_fflush_r+0x70>)
 8000796:	429c      	cmp	r4, r3
 8000798:	d101      	bne.n	800079e <_fflush_r+0x62>
 800079a:	68ac      	ldr	r4, [r5, #8]
 800079c:	e7df      	b.n	800075e <_fflush_r+0x22>
 800079e:	4b04      	ldr	r3, [pc, #16]	; (80007b0 <_fflush_r+0x74>)
 80007a0:	429c      	cmp	r4, r3
 80007a2:	bf08      	it	eq
 80007a4:	68ec      	ldreq	r4, [r5, #12]
 80007a6:	e7da      	b.n	800075e <_fflush_r+0x22>
 80007a8:	08000e04 	.word	0x08000e04
 80007ac:	08000e24 	.word	0x08000e24
 80007b0:	08000de4 	.word	0x08000de4

080007b4 <std>:
 80007b4:	2300      	movs	r3, #0
 80007b6:	b510      	push	{r4, lr}
 80007b8:	4604      	mov	r4, r0
 80007ba:	e9c0 3300 	strd	r3, r3, [r0]
 80007be:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007c2:	6083      	str	r3, [r0, #8]
 80007c4:	8181      	strh	r1, [r0, #12]
 80007c6:	6643      	str	r3, [r0, #100]	; 0x64
 80007c8:	81c2      	strh	r2, [r0, #14]
 80007ca:	6183      	str	r3, [r0, #24]
 80007cc:	4619      	mov	r1, r3
 80007ce:	2208      	movs	r2, #8
 80007d0:	305c      	adds	r0, #92	; 0x5c
 80007d2:	f7ff fdf3 	bl	80003bc <memset>
 80007d6:	4b05      	ldr	r3, [pc, #20]	; (80007ec <std+0x38>)
 80007d8:	6263      	str	r3, [r4, #36]	; 0x24
 80007da:	4b05      	ldr	r3, [pc, #20]	; (80007f0 <std+0x3c>)
 80007dc:	62a3      	str	r3, [r4, #40]	; 0x28
 80007de:	4b05      	ldr	r3, [pc, #20]	; (80007f4 <std+0x40>)
 80007e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007e2:	4b05      	ldr	r3, [pc, #20]	; (80007f8 <std+0x44>)
 80007e4:	6224      	str	r4, [r4, #32]
 80007e6:	6323      	str	r3, [r4, #48]	; 0x30
 80007e8:	bd10      	pop	{r4, pc}
 80007ea:	bf00      	nop
 80007ec:	08000c4d 	.word	0x08000c4d
 80007f0:	08000c6f 	.word	0x08000c6f
 80007f4:	08000ca7 	.word	0x08000ca7
 80007f8:	08000ccb 	.word	0x08000ccb

080007fc <_cleanup_r>:
 80007fc:	4901      	ldr	r1, [pc, #4]	; (8000804 <_cleanup_r+0x8>)
 80007fe:	f000 b8af 	b.w	8000960 <_fwalk_reent>
 8000802:	bf00      	nop
 8000804:	0800073d 	.word	0x0800073d

08000808 <__sfmoreglue>:
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	2268      	movs	r2, #104	; 0x68
 800080c:	1e4d      	subs	r5, r1, #1
 800080e:	4355      	muls	r5, r2
 8000810:	460e      	mov	r6, r1
 8000812:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000816:	f000 f995 	bl	8000b44 <_malloc_r>
 800081a:	4604      	mov	r4, r0
 800081c:	b140      	cbz	r0, 8000830 <__sfmoreglue+0x28>
 800081e:	2100      	movs	r1, #0
 8000820:	e9c0 1600 	strd	r1, r6, [r0]
 8000824:	300c      	adds	r0, #12
 8000826:	60a0      	str	r0, [r4, #8]
 8000828:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800082c:	f7ff fdc6 	bl	80003bc <memset>
 8000830:	4620      	mov	r0, r4
 8000832:	bd70      	pop	{r4, r5, r6, pc}

08000834 <__sfp_lock_acquire>:
 8000834:	4801      	ldr	r0, [pc, #4]	; (800083c <__sfp_lock_acquire+0x8>)
 8000836:	f000 b8b3 	b.w	80009a0 <__retarget_lock_acquire_recursive>
 800083a:	bf00      	nop
 800083c:	20000085 	.word	0x20000085

08000840 <__sfp_lock_release>:
 8000840:	4801      	ldr	r0, [pc, #4]	; (8000848 <__sfp_lock_release+0x8>)
 8000842:	f000 b8ae 	b.w	80009a2 <__retarget_lock_release_recursive>
 8000846:	bf00      	nop
 8000848:	20000085 	.word	0x20000085

0800084c <__sinit_lock_acquire>:
 800084c:	4801      	ldr	r0, [pc, #4]	; (8000854 <__sinit_lock_acquire+0x8>)
 800084e:	f000 b8a7 	b.w	80009a0 <__retarget_lock_acquire_recursive>
 8000852:	bf00      	nop
 8000854:	20000086 	.word	0x20000086

08000858 <__sinit_lock_release>:
 8000858:	4801      	ldr	r0, [pc, #4]	; (8000860 <__sinit_lock_release+0x8>)
 800085a:	f000 b8a2 	b.w	80009a2 <__retarget_lock_release_recursive>
 800085e:	bf00      	nop
 8000860:	20000086 	.word	0x20000086

08000864 <__sinit>:
 8000864:	b510      	push	{r4, lr}
 8000866:	4604      	mov	r4, r0
 8000868:	f7ff fff0 	bl	800084c <__sinit_lock_acquire>
 800086c:	69a3      	ldr	r3, [r4, #24]
 800086e:	b11b      	cbz	r3, 8000878 <__sinit+0x14>
 8000870:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000874:	f7ff bff0 	b.w	8000858 <__sinit_lock_release>
 8000878:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800087c:	6523      	str	r3, [r4, #80]	; 0x50
 800087e:	4b13      	ldr	r3, [pc, #76]	; (80008cc <__sinit+0x68>)
 8000880:	4a13      	ldr	r2, [pc, #76]	; (80008d0 <__sinit+0x6c>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	62a2      	str	r2, [r4, #40]	; 0x28
 8000886:	42a3      	cmp	r3, r4
 8000888:	bf04      	itt	eq
 800088a:	2301      	moveq	r3, #1
 800088c:	61a3      	streq	r3, [r4, #24]
 800088e:	4620      	mov	r0, r4
 8000890:	f000 f820 	bl	80008d4 <__sfp>
 8000894:	6060      	str	r0, [r4, #4]
 8000896:	4620      	mov	r0, r4
 8000898:	f000 f81c 	bl	80008d4 <__sfp>
 800089c:	60a0      	str	r0, [r4, #8]
 800089e:	4620      	mov	r0, r4
 80008a0:	f000 f818 	bl	80008d4 <__sfp>
 80008a4:	2200      	movs	r2, #0
 80008a6:	60e0      	str	r0, [r4, #12]
 80008a8:	2104      	movs	r1, #4
 80008aa:	6860      	ldr	r0, [r4, #4]
 80008ac:	f7ff ff82 	bl	80007b4 <std>
 80008b0:	68a0      	ldr	r0, [r4, #8]
 80008b2:	2201      	movs	r2, #1
 80008b4:	2109      	movs	r1, #9
 80008b6:	f7ff ff7d 	bl	80007b4 <std>
 80008ba:	68e0      	ldr	r0, [r4, #12]
 80008bc:	2202      	movs	r2, #2
 80008be:	2112      	movs	r1, #18
 80008c0:	f7ff ff78 	bl	80007b4 <std>
 80008c4:	2301      	movs	r3, #1
 80008c6:	61a3      	str	r3, [r4, #24]
 80008c8:	e7d2      	b.n	8000870 <__sinit+0xc>
 80008ca:	bf00      	nop
 80008cc:	08000de0 	.word	0x08000de0
 80008d0:	080007fd 	.word	0x080007fd

080008d4 <__sfp>:
 80008d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008d6:	4607      	mov	r7, r0
 80008d8:	f7ff ffac 	bl	8000834 <__sfp_lock_acquire>
 80008dc:	4b1e      	ldr	r3, [pc, #120]	; (8000958 <__sfp+0x84>)
 80008de:	681e      	ldr	r6, [r3, #0]
 80008e0:	69b3      	ldr	r3, [r6, #24]
 80008e2:	b913      	cbnz	r3, 80008ea <__sfp+0x16>
 80008e4:	4630      	mov	r0, r6
 80008e6:	f7ff ffbd 	bl	8000864 <__sinit>
 80008ea:	3648      	adds	r6, #72	; 0x48
 80008ec:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008f0:	3b01      	subs	r3, #1
 80008f2:	d503      	bpl.n	80008fc <__sfp+0x28>
 80008f4:	6833      	ldr	r3, [r6, #0]
 80008f6:	b30b      	cbz	r3, 800093c <__sfp+0x68>
 80008f8:	6836      	ldr	r6, [r6, #0]
 80008fa:	e7f7      	b.n	80008ec <__sfp+0x18>
 80008fc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000900:	b9d5      	cbnz	r5, 8000938 <__sfp+0x64>
 8000902:	4b16      	ldr	r3, [pc, #88]	; (800095c <__sfp+0x88>)
 8000904:	60e3      	str	r3, [r4, #12]
 8000906:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800090a:	6665      	str	r5, [r4, #100]	; 0x64
 800090c:	f000 f847 	bl	800099e <__retarget_lock_init_recursive>
 8000910:	f7ff ff96 	bl	8000840 <__sfp_lock_release>
 8000914:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000918:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800091c:	6025      	str	r5, [r4, #0]
 800091e:	61a5      	str	r5, [r4, #24]
 8000920:	2208      	movs	r2, #8
 8000922:	4629      	mov	r1, r5
 8000924:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000928:	f7ff fd48 	bl	80003bc <memset>
 800092c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000930:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000934:	4620      	mov	r0, r4
 8000936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000938:	3468      	adds	r4, #104	; 0x68
 800093a:	e7d9      	b.n	80008f0 <__sfp+0x1c>
 800093c:	2104      	movs	r1, #4
 800093e:	4638      	mov	r0, r7
 8000940:	f7ff ff62 	bl	8000808 <__sfmoreglue>
 8000944:	4604      	mov	r4, r0
 8000946:	6030      	str	r0, [r6, #0]
 8000948:	2800      	cmp	r0, #0
 800094a:	d1d5      	bne.n	80008f8 <__sfp+0x24>
 800094c:	f7ff ff78 	bl	8000840 <__sfp_lock_release>
 8000950:	230c      	movs	r3, #12
 8000952:	603b      	str	r3, [r7, #0]
 8000954:	e7ee      	b.n	8000934 <__sfp+0x60>
 8000956:	bf00      	nop
 8000958:	08000de0 	.word	0x08000de0
 800095c:	ffff0001 	.word	0xffff0001

08000960 <_fwalk_reent>:
 8000960:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000964:	4606      	mov	r6, r0
 8000966:	4688      	mov	r8, r1
 8000968:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800096c:	2700      	movs	r7, #0
 800096e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000972:	f1b9 0901 	subs.w	r9, r9, #1
 8000976:	d505      	bpl.n	8000984 <_fwalk_reent+0x24>
 8000978:	6824      	ldr	r4, [r4, #0]
 800097a:	2c00      	cmp	r4, #0
 800097c:	d1f7      	bne.n	800096e <_fwalk_reent+0xe>
 800097e:	4638      	mov	r0, r7
 8000980:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000984:	89ab      	ldrh	r3, [r5, #12]
 8000986:	2b01      	cmp	r3, #1
 8000988:	d907      	bls.n	800099a <_fwalk_reent+0x3a>
 800098a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800098e:	3301      	adds	r3, #1
 8000990:	d003      	beq.n	800099a <_fwalk_reent+0x3a>
 8000992:	4629      	mov	r1, r5
 8000994:	4630      	mov	r0, r6
 8000996:	47c0      	blx	r8
 8000998:	4307      	orrs	r7, r0
 800099a:	3568      	adds	r5, #104	; 0x68
 800099c:	e7e9      	b.n	8000972 <_fwalk_reent+0x12>

0800099e <__retarget_lock_init_recursive>:
 800099e:	4770      	bx	lr

080009a0 <__retarget_lock_acquire_recursive>:
 80009a0:	4770      	bx	lr

080009a2 <__retarget_lock_release_recursive>:
 80009a2:	4770      	bx	lr

080009a4 <__swhatbuf_r>:
 80009a4:	b570      	push	{r4, r5, r6, lr}
 80009a6:	460e      	mov	r6, r1
 80009a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80009ac:	2900      	cmp	r1, #0
 80009ae:	b096      	sub	sp, #88	; 0x58
 80009b0:	4614      	mov	r4, r2
 80009b2:	461d      	mov	r5, r3
 80009b4:	da08      	bge.n	80009c8 <__swhatbuf_r+0x24>
 80009b6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80009ba:	2200      	movs	r2, #0
 80009bc:	602a      	str	r2, [r5, #0]
 80009be:	061a      	lsls	r2, r3, #24
 80009c0:	d410      	bmi.n	80009e4 <__swhatbuf_r+0x40>
 80009c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009c6:	e00e      	b.n	80009e6 <__swhatbuf_r+0x42>
 80009c8:	466a      	mov	r2, sp
 80009ca:	f000 f9a5 	bl	8000d18 <_fstat_r>
 80009ce:	2800      	cmp	r0, #0
 80009d0:	dbf1      	blt.n	80009b6 <__swhatbuf_r+0x12>
 80009d2:	9a01      	ldr	r2, [sp, #4]
 80009d4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009d8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009dc:	425a      	negs	r2, r3
 80009de:	415a      	adcs	r2, r3
 80009e0:	602a      	str	r2, [r5, #0]
 80009e2:	e7ee      	b.n	80009c2 <__swhatbuf_r+0x1e>
 80009e4:	2340      	movs	r3, #64	; 0x40
 80009e6:	2000      	movs	r0, #0
 80009e8:	6023      	str	r3, [r4, #0]
 80009ea:	b016      	add	sp, #88	; 0x58
 80009ec:	bd70      	pop	{r4, r5, r6, pc}
	...

080009f0 <__smakebuf_r>:
 80009f0:	898b      	ldrh	r3, [r1, #12]
 80009f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009f4:	079d      	lsls	r5, r3, #30
 80009f6:	4606      	mov	r6, r0
 80009f8:	460c      	mov	r4, r1
 80009fa:	d507      	bpl.n	8000a0c <__smakebuf_r+0x1c>
 80009fc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a00:	6023      	str	r3, [r4, #0]
 8000a02:	6123      	str	r3, [r4, #16]
 8000a04:	2301      	movs	r3, #1
 8000a06:	6163      	str	r3, [r4, #20]
 8000a08:	b002      	add	sp, #8
 8000a0a:	bd70      	pop	{r4, r5, r6, pc}
 8000a0c:	ab01      	add	r3, sp, #4
 8000a0e:	466a      	mov	r2, sp
 8000a10:	f7ff ffc8 	bl	80009a4 <__swhatbuf_r>
 8000a14:	9900      	ldr	r1, [sp, #0]
 8000a16:	4605      	mov	r5, r0
 8000a18:	4630      	mov	r0, r6
 8000a1a:	f000 f893 	bl	8000b44 <_malloc_r>
 8000a1e:	b948      	cbnz	r0, 8000a34 <__smakebuf_r+0x44>
 8000a20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a24:	059a      	lsls	r2, r3, #22
 8000a26:	d4ef      	bmi.n	8000a08 <__smakebuf_r+0x18>
 8000a28:	f023 0303 	bic.w	r3, r3, #3
 8000a2c:	f043 0302 	orr.w	r3, r3, #2
 8000a30:	81a3      	strh	r3, [r4, #12]
 8000a32:	e7e3      	b.n	80009fc <__smakebuf_r+0xc>
 8000a34:	4b0d      	ldr	r3, [pc, #52]	; (8000a6c <__smakebuf_r+0x7c>)
 8000a36:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a38:	89a3      	ldrh	r3, [r4, #12]
 8000a3a:	6020      	str	r0, [r4, #0]
 8000a3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a40:	81a3      	strh	r3, [r4, #12]
 8000a42:	9b00      	ldr	r3, [sp, #0]
 8000a44:	6163      	str	r3, [r4, #20]
 8000a46:	9b01      	ldr	r3, [sp, #4]
 8000a48:	6120      	str	r0, [r4, #16]
 8000a4a:	b15b      	cbz	r3, 8000a64 <__smakebuf_r+0x74>
 8000a4c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a50:	4630      	mov	r0, r6
 8000a52:	f000 f973 	bl	8000d3c <_isatty_r>
 8000a56:	b128      	cbz	r0, 8000a64 <__smakebuf_r+0x74>
 8000a58:	89a3      	ldrh	r3, [r4, #12]
 8000a5a:	f023 0303 	bic.w	r3, r3, #3
 8000a5e:	f043 0301 	orr.w	r3, r3, #1
 8000a62:	81a3      	strh	r3, [r4, #12]
 8000a64:	89a0      	ldrh	r0, [r4, #12]
 8000a66:	4305      	orrs	r5, r0
 8000a68:	81a5      	strh	r5, [r4, #12]
 8000a6a:	e7cd      	b.n	8000a08 <__smakebuf_r+0x18>
 8000a6c:	080007fd 	.word	0x080007fd

08000a70 <_free_r>:
 8000a70:	b538      	push	{r3, r4, r5, lr}
 8000a72:	4605      	mov	r5, r0
 8000a74:	2900      	cmp	r1, #0
 8000a76:	d041      	beq.n	8000afc <_free_r+0x8c>
 8000a78:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a7c:	1f0c      	subs	r4, r1, #4
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	bfb8      	it	lt
 8000a82:	18e4      	addlt	r4, r4, r3
 8000a84:	f000 f97c 	bl	8000d80 <__malloc_lock>
 8000a88:	4a1d      	ldr	r2, [pc, #116]	; (8000b00 <_free_r+0x90>)
 8000a8a:	6813      	ldr	r3, [r2, #0]
 8000a8c:	b933      	cbnz	r3, 8000a9c <_free_r+0x2c>
 8000a8e:	6063      	str	r3, [r4, #4]
 8000a90:	6014      	str	r4, [r2, #0]
 8000a92:	4628      	mov	r0, r5
 8000a94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a98:	f000 b978 	b.w	8000d8c <__malloc_unlock>
 8000a9c:	42a3      	cmp	r3, r4
 8000a9e:	d908      	bls.n	8000ab2 <_free_r+0x42>
 8000aa0:	6820      	ldr	r0, [r4, #0]
 8000aa2:	1821      	adds	r1, r4, r0
 8000aa4:	428b      	cmp	r3, r1
 8000aa6:	bf01      	itttt	eq
 8000aa8:	6819      	ldreq	r1, [r3, #0]
 8000aaa:	685b      	ldreq	r3, [r3, #4]
 8000aac:	1809      	addeq	r1, r1, r0
 8000aae:	6021      	streq	r1, [r4, #0]
 8000ab0:	e7ed      	b.n	8000a8e <_free_r+0x1e>
 8000ab2:	461a      	mov	r2, r3
 8000ab4:	685b      	ldr	r3, [r3, #4]
 8000ab6:	b10b      	cbz	r3, 8000abc <_free_r+0x4c>
 8000ab8:	42a3      	cmp	r3, r4
 8000aba:	d9fa      	bls.n	8000ab2 <_free_r+0x42>
 8000abc:	6811      	ldr	r1, [r2, #0]
 8000abe:	1850      	adds	r0, r2, r1
 8000ac0:	42a0      	cmp	r0, r4
 8000ac2:	d10b      	bne.n	8000adc <_free_r+0x6c>
 8000ac4:	6820      	ldr	r0, [r4, #0]
 8000ac6:	4401      	add	r1, r0
 8000ac8:	1850      	adds	r0, r2, r1
 8000aca:	4283      	cmp	r3, r0
 8000acc:	6011      	str	r1, [r2, #0]
 8000ace:	d1e0      	bne.n	8000a92 <_free_r+0x22>
 8000ad0:	6818      	ldr	r0, [r3, #0]
 8000ad2:	685b      	ldr	r3, [r3, #4]
 8000ad4:	6053      	str	r3, [r2, #4]
 8000ad6:	4401      	add	r1, r0
 8000ad8:	6011      	str	r1, [r2, #0]
 8000ada:	e7da      	b.n	8000a92 <_free_r+0x22>
 8000adc:	d902      	bls.n	8000ae4 <_free_r+0x74>
 8000ade:	230c      	movs	r3, #12
 8000ae0:	602b      	str	r3, [r5, #0]
 8000ae2:	e7d6      	b.n	8000a92 <_free_r+0x22>
 8000ae4:	6820      	ldr	r0, [r4, #0]
 8000ae6:	1821      	adds	r1, r4, r0
 8000ae8:	428b      	cmp	r3, r1
 8000aea:	bf04      	itt	eq
 8000aec:	6819      	ldreq	r1, [r3, #0]
 8000aee:	685b      	ldreq	r3, [r3, #4]
 8000af0:	6063      	str	r3, [r4, #4]
 8000af2:	bf04      	itt	eq
 8000af4:	1809      	addeq	r1, r1, r0
 8000af6:	6021      	streq	r1, [r4, #0]
 8000af8:	6054      	str	r4, [r2, #4]
 8000afa:	e7ca      	b.n	8000a92 <_free_r+0x22>
 8000afc:	bd38      	pop	{r3, r4, r5, pc}
 8000afe:	bf00      	nop
 8000b00:	20000088 	.word	0x20000088

08000b04 <sbrk_aligned>:
 8000b04:	b570      	push	{r4, r5, r6, lr}
 8000b06:	4e0e      	ldr	r6, [pc, #56]	; (8000b40 <sbrk_aligned+0x3c>)
 8000b08:	460c      	mov	r4, r1
 8000b0a:	6831      	ldr	r1, [r6, #0]
 8000b0c:	4605      	mov	r5, r0
 8000b0e:	b911      	cbnz	r1, 8000b16 <sbrk_aligned+0x12>
 8000b10:	f000 f88c 	bl	8000c2c <_sbrk_r>
 8000b14:	6030      	str	r0, [r6, #0]
 8000b16:	4621      	mov	r1, r4
 8000b18:	4628      	mov	r0, r5
 8000b1a:	f000 f887 	bl	8000c2c <_sbrk_r>
 8000b1e:	1c43      	adds	r3, r0, #1
 8000b20:	d00a      	beq.n	8000b38 <sbrk_aligned+0x34>
 8000b22:	1cc4      	adds	r4, r0, #3
 8000b24:	f024 0403 	bic.w	r4, r4, #3
 8000b28:	42a0      	cmp	r0, r4
 8000b2a:	d007      	beq.n	8000b3c <sbrk_aligned+0x38>
 8000b2c:	1a21      	subs	r1, r4, r0
 8000b2e:	4628      	mov	r0, r5
 8000b30:	f000 f87c 	bl	8000c2c <_sbrk_r>
 8000b34:	3001      	adds	r0, #1
 8000b36:	d101      	bne.n	8000b3c <sbrk_aligned+0x38>
 8000b38:	f04f 34ff 	mov.w	r4, #4294967295
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	bd70      	pop	{r4, r5, r6, pc}
 8000b40:	2000008c 	.word	0x2000008c

08000b44 <_malloc_r>:
 8000b44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b48:	1ccd      	adds	r5, r1, #3
 8000b4a:	f025 0503 	bic.w	r5, r5, #3
 8000b4e:	3508      	adds	r5, #8
 8000b50:	2d0c      	cmp	r5, #12
 8000b52:	bf38      	it	cc
 8000b54:	250c      	movcc	r5, #12
 8000b56:	2d00      	cmp	r5, #0
 8000b58:	4607      	mov	r7, r0
 8000b5a:	db01      	blt.n	8000b60 <_malloc_r+0x1c>
 8000b5c:	42a9      	cmp	r1, r5
 8000b5e:	d905      	bls.n	8000b6c <_malloc_r+0x28>
 8000b60:	230c      	movs	r3, #12
 8000b62:	603b      	str	r3, [r7, #0]
 8000b64:	2600      	movs	r6, #0
 8000b66:	4630      	mov	r0, r6
 8000b68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b6c:	4e2e      	ldr	r6, [pc, #184]	; (8000c28 <_malloc_r+0xe4>)
 8000b6e:	f000 f907 	bl	8000d80 <__malloc_lock>
 8000b72:	6833      	ldr	r3, [r6, #0]
 8000b74:	461c      	mov	r4, r3
 8000b76:	bb34      	cbnz	r4, 8000bc6 <_malloc_r+0x82>
 8000b78:	4629      	mov	r1, r5
 8000b7a:	4638      	mov	r0, r7
 8000b7c:	f7ff ffc2 	bl	8000b04 <sbrk_aligned>
 8000b80:	1c43      	adds	r3, r0, #1
 8000b82:	4604      	mov	r4, r0
 8000b84:	d14d      	bne.n	8000c22 <_malloc_r+0xde>
 8000b86:	6834      	ldr	r4, [r6, #0]
 8000b88:	4626      	mov	r6, r4
 8000b8a:	2e00      	cmp	r6, #0
 8000b8c:	d140      	bne.n	8000c10 <_malloc_r+0xcc>
 8000b8e:	6823      	ldr	r3, [r4, #0]
 8000b90:	4631      	mov	r1, r6
 8000b92:	4638      	mov	r0, r7
 8000b94:	eb04 0803 	add.w	r8, r4, r3
 8000b98:	f000 f848 	bl	8000c2c <_sbrk_r>
 8000b9c:	4580      	cmp	r8, r0
 8000b9e:	d13a      	bne.n	8000c16 <_malloc_r+0xd2>
 8000ba0:	6821      	ldr	r1, [r4, #0]
 8000ba2:	3503      	adds	r5, #3
 8000ba4:	1a6d      	subs	r5, r5, r1
 8000ba6:	f025 0503 	bic.w	r5, r5, #3
 8000baa:	3508      	adds	r5, #8
 8000bac:	2d0c      	cmp	r5, #12
 8000bae:	bf38      	it	cc
 8000bb0:	250c      	movcc	r5, #12
 8000bb2:	4629      	mov	r1, r5
 8000bb4:	4638      	mov	r0, r7
 8000bb6:	f7ff ffa5 	bl	8000b04 <sbrk_aligned>
 8000bba:	3001      	adds	r0, #1
 8000bbc:	d02b      	beq.n	8000c16 <_malloc_r+0xd2>
 8000bbe:	6823      	ldr	r3, [r4, #0]
 8000bc0:	442b      	add	r3, r5
 8000bc2:	6023      	str	r3, [r4, #0]
 8000bc4:	e00e      	b.n	8000be4 <_malloc_r+0xa0>
 8000bc6:	6822      	ldr	r2, [r4, #0]
 8000bc8:	1b52      	subs	r2, r2, r5
 8000bca:	d41e      	bmi.n	8000c0a <_malloc_r+0xc6>
 8000bcc:	2a0b      	cmp	r2, #11
 8000bce:	d916      	bls.n	8000bfe <_malloc_r+0xba>
 8000bd0:	1961      	adds	r1, r4, r5
 8000bd2:	42a3      	cmp	r3, r4
 8000bd4:	6025      	str	r5, [r4, #0]
 8000bd6:	bf18      	it	ne
 8000bd8:	6059      	strne	r1, [r3, #4]
 8000bda:	6863      	ldr	r3, [r4, #4]
 8000bdc:	bf08      	it	eq
 8000bde:	6031      	streq	r1, [r6, #0]
 8000be0:	5162      	str	r2, [r4, r5]
 8000be2:	604b      	str	r3, [r1, #4]
 8000be4:	4638      	mov	r0, r7
 8000be6:	f104 060b 	add.w	r6, r4, #11
 8000bea:	f000 f8cf 	bl	8000d8c <__malloc_unlock>
 8000bee:	f026 0607 	bic.w	r6, r6, #7
 8000bf2:	1d23      	adds	r3, r4, #4
 8000bf4:	1af2      	subs	r2, r6, r3
 8000bf6:	d0b6      	beq.n	8000b66 <_malloc_r+0x22>
 8000bf8:	1b9b      	subs	r3, r3, r6
 8000bfa:	50a3      	str	r3, [r4, r2]
 8000bfc:	e7b3      	b.n	8000b66 <_malloc_r+0x22>
 8000bfe:	6862      	ldr	r2, [r4, #4]
 8000c00:	42a3      	cmp	r3, r4
 8000c02:	bf0c      	ite	eq
 8000c04:	6032      	streq	r2, [r6, #0]
 8000c06:	605a      	strne	r2, [r3, #4]
 8000c08:	e7ec      	b.n	8000be4 <_malloc_r+0xa0>
 8000c0a:	4623      	mov	r3, r4
 8000c0c:	6864      	ldr	r4, [r4, #4]
 8000c0e:	e7b2      	b.n	8000b76 <_malloc_r+0x32>
 8000c10:	4634      	mov	r4, r6
 8000c12:	6876      	ldr	r6, [r6, #4]
 8000c14:	e7b9      	b.n	8000b8a <_malloc_r+0x46>
 8000c16:	230c      	movs	r3, #12
 8000c18:	603b      	str	r3, [r7, #0]
 8000c1a:	4638      	mov	r0, r7
 8000c1c:	f000 f8b6 	bl	8000d8c <__malloc_unlock>
 8000c20:	e7a1      	b.n	8000b66 <_malloc_r+0x22>
 8000c22:	6025      	str	r5, [r4, #0]
 8000c24:	e7de      	b.n	8000be4 <_malloc_r+0xa0>
 8000c26:	bf00      	nop
 8000c28:	20000088 	.word	0x20000088

08000c2c <_sbrk_r>:
 8000c2c:	b538      	push	{r3, r4, r5, lr}
 8000c2e:	4d06      	ldr	r5, [pc, #24]	; (8000c48 <_sbrk_r+0x1c>)
 8000c30:	2300      	movs	r3, #0
 8000c32:	4604      	mov	r4, r0
 8000c34:	4608      	mov	r0, r1
 8000c36:	602b      	str	r3, [r5, #0]
 8000c38:	f7ff fb36 	bl	80002a8 <_sbrk>
 8000c3c:	1c43      	adds	r3, r0, #1
 8000c3e:	d102      	bne.n	8000c46 <_sbrk_r+0x1a>
 8000c40:	682b      	ldr	r3, [r5, #0]
 8000c42:	b103      	cbz	r3, 8000c46 <_sbrk_r+0x1a>
 8000c44:	6023      	str	r3, [r4, #0]
 8000c46:	bd38      	pop	{r3, r4, r5, pc}
 8000c48:	20000090 	.word	0x20000090

08000c4c <__sread>:
 8000c4c:	b510      	push	{r4, lr}
 8000c4e:	460c      	mov	r4, r1
 8000c50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c54:	f000 f8a0 	bl	8000d98 <_read_r>
 8000c58:	2800      	cmp	r0, #0
 8000c5a:	bfab      	itete	ge
 8000c5c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c5e:	89a3      	ldrhlt	r3, [r4, #12]
 8000c60:	181b      	addge	r3, r3, r0
 8000c62:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c66:	bfac      	ite	ge
 8000c68:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c6a:	81a3      	strhlt	r3, [r4, #12]
 8000c6c:	bd10      	pop	{r4, pc}

08000c6e <__swrite>:
 8000c6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c72:	461f      	mov	r7, r3
 8000c74:	898b      	ldrh	r3, [r1, #12]
 8000c76:	05db      	lsls	r3, r3, #23
 8000c78:	4605      	mov	r5, r0
 8000c7a:	460c      	mov	r4, r1
 8000c7c:	4616      	mov	r6, r2
 8000c7e:	d505      	bpl.n	8000c8c <__swrite+0x1e>
 8000c80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c84:	2302      	movs	r3, #2
 8000c86:	2200      	movs	r2, #0
 8000c88:	f000 f868 	bl	8000d5c <_lseek_r>
 8000c8c:	89a3      	ldrh	r3, [r4, #12]
 8000c8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c92:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c96:	81a3      	strh	r3, [r4, #12]
 8000c98:	4632      	mov	r2, r6
 8000c9a:	463b      	mov	r3, r7
 8000c9c:	4628      	mov	r0, r5
 8000c9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ca2:	f000 b817 	b.w	8000cd4 <_write_r>

08000ca6 <__sseek>:
 8000ca6:	b510      	push	{r4, lr}
 8000ca8:	460c      	mov	r4, r1
 8000caa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cae:	f000 f855 	bl	8000d5c <_lseek_r>
 8000cb2:	1c43      	adds	r3, r0, #1
 8000cb4:	89a3      	ldrh	r3, [r4, #12]
 8000cb6:	bf15      	itete	ne
 8000cb8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cbe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cc2:	81a3      	strheq	r3, [r4, #12]
 8000cc4:	bf18      	it	ne
 8000cc6:	81a3      	strhne	r3, [r4, #12]
 8000cc8:	bd10      	pop	{r4, pc}

08000cca <__sclose>:
 8000cca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cce:	f000 b813 	b.w	8000cf8 <_close_r>
	...

08000cd4 <_write_r>:
 8000cd4:	b538      	push	{r3, r4, r5, lr}
 8000cd6:	4d07      	ldr	r5, [pc, #28]	; (8000cf4 <_write_r+0x20>)
 8000cd8:	4604      	mov	r4, r0
 8000cda:	4608      	mov	r0, r1
 8000cdc:	4611      	mov	r1, r2
 8000cde:	2200      	movs	r2, #0
 8000ce0:	602a      	str	r2, [r5, #0]
 8000ce2:	461a      	mov	r2, r3
 8000ce4:	f7ff fa93 	bl	800020e <_write>
 8000ce8:	1c43      	adds	r3, r0, #1
 8000cea:	d102      	bne.n	8000cf2 <_write_r+0x1e>
 8000cec:	682b      	ldr	r3, [r5, #0]
 8000cee:	b103      	cbz	r3, 8000cf2 <_write_r+0x1e>
 8000cf0:	6023      	str	r3, [r4, #0]
 8000cf2:	bd38      	pop	{r3, r4, r5, pc}
 8000cf4:	20000090 	.word	0x20000090

08000cf8 <_close_r>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	4d06      	ldr	r5, [pc, #24]	; (8000d14 <_close_r+0x1c>)
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	4608      	mov	r0, r1
 8000d02:	602b      	str	r3, [r5, #0]
 8000d04:	f7ff fa9f 	bl	8000246 <_close>
 8000d08:	1c43      	adds	r3, r0, #1
 8000d0a:	d102      	bne.n	8000d12 <_close_r+0x1a>
 8000d0c:	682b      	ldr	r3, [r5, #0]
 8000d0e:	b103      	cbz	r3, 8000d12 <_close_r+0x1a>
 8000d10:	6023      	str	r3, [r4, #0]
 8000d12:	bd38      	pop	{r3, r4, r5, pc}
 8000d14:	20000090 	.word	0x20000090

08000d18 <_fstat_r>:
 8000d18:	b538      	push	{r3, r4, r5, lr}
 8000d1a:	4d07      	ldr	r5, [pc, #28]	; (8000d38 <_fstat_r+0x20>)
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	4604      	mov	r4, r0
 8000d20:	4608      	mov	r0, r1
 8000d22:	4611      	mov	r1, r2
 8000d24:	602b      	str	r3, [r5, #0]
 8000d26:	f7ff fa99 	bl	800025c <_fstat>
 8000d2a:	1c43      	adds	r3, r0, #1
 8000d2c:	d102      	bne.n	8000d34 <_fstat_r+0x1c>
 8000d2e:	682b      	ldr	r3, [r5, #0]
 8000d30:	b103      	cbz	r3, 8000d34 <_fstat_r+0x1c>
 8000d32:	6023      	str	r3, [r4, #0]
 8000d34:	bd38      	pop	{r3, r4, r5, pc}
 8000d36:	bf00      	nop
 8000d38:	20000090 	.word	0x20000090

08000d3c <_isatty_r>:
 8000d3c:	b538      	push	{r3, r4, r5, lr}
 8000d3e:	4d06      	ldr	r5, [pc, #24]	; (8000d58 <_isatty_r+0x1c>)
 8000d40:	2300      	movs	r3, #0
 8000d42:	4604      	mov	r4, r0
 8000d44:	4608      	mov	r0, r1
 8000d46:	602b      	str	r3, [r5, #0]
 8000d48:	f7ff fa97 	bl	800027a <_isatty>
 8000d4c:	1c43      	adds	r3, r0, #1
 8000d4e:	d102      	bne.n	8000d56 <_isatty_r+0x1a>
 8000d50:	682b      	ldr	r3, [r5, #0]
 8000d52:	b103      	cbz	r3, 8000d56 <_isatty_r+0x1a>
 8000d54:	6023      	str	r3, [r4, #0]
 8000d56:	bd38      	pop	{r3, r4, r5, pc}
 8000d58:	20000090 	.word	0x20000090

08000d5c <_lseek_r>:
 8000d5c:	b538      	push	{r3, r4, r5, lr}
 8000d5e:	4d07      	ldr	r5, [pc, #28]	; (8000d7c <_lseek_r+0x20>)
 8000d60:	4604      	mov	r4, r0
 8000d62:	4608      	mov	r0, r1
 8000d64:	4611      	mov	r1, r2
 8000d66:	2200      	movs	r2, #0
 8000d68:	602a      	str	r2, [r5, #0]
 8000d6a:	461a      	mov	r2, r3
 8000d6c:	f7ff fa8f 	bl	800028e <_lseek>
 8000d70:	1c43      	adds	r3, r0, #1
 8000d72:	d102      	bne.n	8000d7a <_lseek_r+0x1e>
 8000d74:	682b      	ldr	r3, [r5, #0]
 8000d76:	b103      	cbz	r3, 8000d7a <_lseek_r+0x1e>
 8000d78:	6023      	str	r3, [r4, #0]
 8000d7a:	bd38      	pop	{r3, r4, r5, pc}
 8000d7c:	20000090 	.word	0x20000090

08000d80 <__malloc_lock>:
 8000d80:	4801      	ldr	r0, [pc, #4]	; (8000d88 <__malloc_lock+0x8>)
 8000d82:	f7ff be0d 	b.w	80009a0 <__retarget_lock_acquire_recursive>
 8000d86:	bf00      	nop
 8000d88:	20000084 	.word	0x20000084

08000d8c <__malloc_unlock>:
 8000d8c:	4801      	ldr	r0, [pc, #4]	; (8000d94 <__malloc_unlock+0x8>)
 8000d8e:	f7ff be08 	b.w	80009a2 <__retarget_lock_release_recursive>
 8000d92:	bf00      	nop
 8000d94:	20000084 	.word	0x20000084

08000d98 <_read_r>:
 8000d98:	b538      	push	{r3, r4, r5, lr}
 8000d9a:	4d07      	ldr	r5, [pc, #28]	; (8000db8 <_read_r+0x20>)
 8000d9c:	4604      	mov	r4, r0
 8000d9e:	4608      	mov	r0, r1
 8000da0:	4611      	mov	r1, r2
 8000da2:	2200      	movs	r2, #0
 8000da4:	602a      	str	r2, [r5, #0]
 8000da6:	461a      	mov	r2, r3
 8000da8:	f7ff fa14 	bl	80001d4 <_read>
 8000dac:	1c43      	adds	r3, r0, #1
 8000dae:	d102      	bne.n	8000db6 <_read_r+0x1e>
 8000db0:	682b      	ldr	r3, [r5, #0]
 8000db2:	b103      	cbz	r3, 8000db6 <_read_r+0x1e>
 8000db4:	6023      	str	r3, [r4, #0]
 8000db6:	bd38      	pop	{r3, r4, r5, pc}
 8000db8:	20000090 	.word	0x20000090

08000dbc <_init>:
 8000dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dbe:	bf00      	nop
 8000dc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dc2:	bc08      	pop	{r3}
 8000dc4:	469e      	mov	lr, r3
 8000dc6:	4770      	bx	lr

08000dc8 <_fini>:
 8000dc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dca:	bf00      	nop
 8000dcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dce:	bc08      	pop	{r3}
 8000dd0:	469e      	mov	lr, r3
 8000dd2:	4770      	bx	lr
